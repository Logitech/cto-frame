// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Math.proto

#include "Math.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Math_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformMatrix4_Math_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Math_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformVector2_Math_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Math_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformVector3_Math_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Math_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformVector4_Math_2eproto;
namespace frame {
namespace proto {
class UniformVector2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformVector2> _instance;
} _UniformVector2_default_instance_;
class UniformVector3DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformVector3> _instance;
} _UniformVector3_default_instance_;
class UniformVector4DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformVector4> _instance;
} _UniformVector4_default_instance_;
class UniformMatrix4DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformMatrix4> _instance;
} _UniformMatrix4_default_instance_;
class UniformIntsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformInts> _instance;
} _UniformInts_default_instance_;
class UniformBoolsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformBools> _instance;
} _UniformBools_default_instance_;
class UniformFloatsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformFloats> _instance;
} _UniformFloats_default_instance_;
class UniformVector2sDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformVector2s> _instance;
} _UniformVector2s_default_instance_;
class UniformVector3sDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformVector3s> _instance;
} _UniformVector3s_default_instance_;
class UniformVector4sDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformVector4s> _instance;
} _UniformVector4s_default_instance_;
class UniformMatrix4sDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UniformMatrix4s> _instance;
} _UniformMatrix4s_default_instance_;
}  // namespace proto
}  // namespace frame
static void InitDefaultsscc_info_UniformBools_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformBools_default_instance_;
    new (ptr) ::frame::proto::UniformBools();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformBools::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformBools_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UniformBools_Math_2eproto}, {}};

static void InitDefaultsscc_info_UniformFloats_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformFloats_default_instance_;
    new (ptr) ::frame::proto::UniformFloats();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformFloats::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformFloats_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UniformFloats_Math_2eproto}, {}};

static void InitDefaultsscc_info_UniformInts_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformInts_default_instance_;
    new (ptr) ::frame::proto::UniformInts();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformInts::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformInts_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UniformInts_Math_2eproto}, {}};

static void InitDefaultsscc_info_UniformMatrix4_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformMatrix4_default_instance_;
    new (ptr) ::frame::proto::UniformMatrix4();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformMatrix4::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformMatrix4_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UniformMatrix4_Math_2eproto}, {}};

static void InitDefaultsscc_info_UniformMatrix4s_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformMatrix4s_default_instance_;
    new (ptr) ::frame::proto::UniformMatrix4s();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformMatrix4s::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UniformMatrix4s_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UniformMatrix4s_Math_2eproto}, {
      &scc_info_UniformMatrix4_Math_2eproto.base,}};

static void InitDefaultsscc_info_UniformVector2_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformVector2_default_instance_;
    new (ptr) ::frame::proto::UniformVector2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformVector2::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformVector2_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UniformVector2_Math_2eproto}, {}};

static void InitDefaultsscc_info_UniformVector2s_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformVector2s_default_instance_;
    new (ptr) ::frame::proto::UniformVector2s();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformVector2s::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UniformVector2s_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UniformVector2s_Math_2eproto}, {
      &scc_info_UniformVector2_Math_2eproto.base,}};

static void InitDefaultsscc_info_UniformVector3_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformVector3_default_instance_;
    new (ptr) ::frame::proto::UniformVector3();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformVector3::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformVector3_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UniformVector3_Math_2eproto}, {}};

static void InitDefaultsscc_info_UniformVector3s_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformVector3s_default_instance_;
    new (ptr) ::frame::proto::UniformVector3s();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformVector3s::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UniformVector3s_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UniformVector3s_Math_2eproto}, {
      &scc_info_UniformVector3_Math_2eproto.base,}};

static void InitDefaultsscc_info_UniformVector4_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformVector4_default_instance_;
    new (ptr) ::frame::proto::UniformVector4();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformVector4::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UniformVector4_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UniformVector4_Math_2eproto}, {}};

static void InitDefaultsscc_info_UniformVector4s_Math_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::frame::proto::_UniformVector4s_default_instance_;
    new (ptr) ::frame::proto::UniformVector4s();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::frame::proto::UniformVector4s::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UniformVector4s_Math_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UniformVector4s_Math_2eproto}, {
      &scc_info_UniformVector4_Math_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Math_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Math_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Math_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Math_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector2, x_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector2, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector3, x_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector3, y_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector3, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector4, x_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector4, y_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector4, z_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector4, w_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m11_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m12_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m13_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m14_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m21_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m22_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m23_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m24_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m31_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m32_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m33_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m34_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m41_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m42_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m43_),
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4, m44_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformInts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformInts, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformBools, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformBools, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformFloats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformFloats, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector2s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector2s, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector3s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector3s, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector4s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformVector4s, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::frame::proto::UniformMatrix4s, values_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::frame::proto::UniformVector2)},
  { 7, -1, sizeof(::frame::proto::UniformVector3)},
  { 15, -1, sizeof(::frame::proto::UniformVector4)},
  { 24, -1, sizeof(::frame::proto::UniformMatrix4)},
  { 45, -1, sizeof(::frame::proto::UniformInts)},
  { 51, -1, sizeof(::frame::proto::UniformBools)},
  { 57, -1, sizeof(::frame::proto::UniformFloats)},
  { 63, -1, sizeof(::frame::proto::UniformVector2s)},
  { 69, -1, sizeof(::frame::proto::UniformVector3s)},
  { 75, -1, sizeof(::frame::proto::UniformVector4s)},
  { 81, -1, sizeof(::frame::proto::UniformMatrix4s)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformVector2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformVector3_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformVector4_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformMatrix4_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformInts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformBools_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformFloats_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformVector2s_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformVector3s_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformVector4s_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::frame::proto::_UniformMatrix4s_default_instance_),
};

const char descriptor_table_protodef_Math_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nMath.proto\022\013frame.proto\"&\n\016UniformVect"
  "or2\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"1\n\016UniformVect"
  "or3\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"<\n\016"
  "UniformVector4\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001"
  "z\030\003 \001(\002\022\t\n\001w\030\004 \001(\002\"\340\001\n\016UniformMatrix4\022\013\n"
  "\003m11\030\013 \001(\002\022\013\n\003m12\030\014 \001(\002\022\013\n\003m13\030\r \001(\002\022\013\n\003"
  "m14\030\016 \001(\002\022\013\n\003m21\030\025 \001(\002\022\013\n\003m22\030\026 \001(\002\022\013\n\003m"
  "23\030\027 \001(\002\022\013\n\003m24\030\030 \001(\002\022\013\n\003m31\030\037 \001(\002\022\013\n\003m3"
  "2\030  \001(\002\022\013\n\003m33\030! \001(\002\022\013\n\003m34\030\" \001(\002\022\013\n\003m41"
  "\030) \001(\002\022\013\n\003m42\030* \001(\002\022\013\n\003m43\030+ \001(\002\022\013\n\003m44\030"
  ", \001(\002\"\035\n\013UniformInts\022\016\n\006values\030\001 \003(\005\"\036\n\014"
  "UniformBools\022\016\n\006values\030\001 \003(\010\"\037\n\rUniformF"
  "loats\022\016\n\006values\030\001 \003(\002\">\n\017UniformVector2s"
  "\022+\n\006values\030\001 \003(\0132\033.frame.proto.UniformVe"
  "ctor2\">\n\017UniformVector3s\022+\n\006values\030\001 \003(\013"
  "2\033.frame.proto.UniformVector3\">\n\017Uniform"
  "Vector4s\022+\n\006values\030\001 \003(\0132\033.frame.proto.U"
  "niformVector4\">\n\017UniformMatrix4s\022+\n\006valu"
  "es\030\001 \003(\0132\033.frame.proto.UniformMatrix4b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Math_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Math_2eproto_sccs[11] = {
  &scc_info_UniformBools_Math_2eproto.base,
  &scc_info_UniformFloats_Math_2eproto.base,
  &scc_info_UniformInts_Math_2eproto.base,
  &scc_info_UniformMatrix4_Math_2eproto.base,
  &scc_info_UniformMatrix4s_Math_2eproto.base,
  &scc_info_UniformVector2_Math_2eproto.base,
  &scc_info_UniformVector2s_Math_2eproto.base,
  &scc_info_UniformVector3_Math_2eproto.base,
  &scc_info_UniformVector3s_Math_2eproto.base,
  &scc_info_UniformVector4_Math_2eproto.base,
  &scc_info_UniformVector4s_Math_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Math_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Math_2eproto = {
  false, false, descriptor_table_protodef_Math_2eproto, "Math.proto", 765,
  &descriptor_table_Math_2eproto_once, descriptor_table_Math_2eproto_sccs, descriptor_table_Math_2eproto_deps, 11, 0,
  schemas, file_default_instances, TableStruct_Math_2eproto::offsets,
  file_level_metadata_Math_2eproto, 11, file_level_enum_descriptors_Math_2eproto, file_level_service_descriptors_Math_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Math_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Math_2eproto)), true);
namespace frame {
namespace proto {

// ===================================================================

void UniformVector2::InitAsDefaultInstance() {
}
class UniformVector2::_Internal {
 public:
};

UniformVector2::UniformVector2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformVector2)
}
UniformVector2::UniformVector2(const UniformVector2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformVector2)
}

void UniformVector2::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

UniformVector2::~UniformVector2() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformVector2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformVector2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformVector2::ArenaDtor(void* object) {
  UniformVector2* _this = reinterpret_cast< UniformVector2* >(object);
  (void)_this;
}
void UniformVector2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformVector2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformVector2& UniformVector2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformVector2_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformVector2::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformVector2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformVector2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformVector2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformVector2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformVector2)
  return target;
}

size_t UniformVector2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformVector2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformVector2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformVector2)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformVector2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformVector2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformVector2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformVector2)
    MergeFrom(*source);
  }
}

void UniformVector2::MergeFrom(const UniformVector2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformVector2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
}

void UniformVector2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformVector2::CopyFrom(const UniformVector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformVector2::IsInitialized() const {
  return true;
}

void UniformVector2::InternalSwap(UniformVector2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UniformVector2, y_)
      + sizeof(UniformVector2::y_)
      - PROTOBUF_FIELD_OFFSET(UniformVector2, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformVector2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformVector3::InitAsDefaultInstance() {
}
class UniformVector3::_Internal {
 public:
};

UniformVector3::UniformVector3(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformVector3)
}
UniformVector3::UniformVector3(const UniformVector3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformVector3)
}

void UniformVector3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

UniformVector3::~UniformVector3() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformVector3)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformVector3::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformVector3::ArenaDtor(void* object) {
  UniformVector3* _this = reinterpret_cast< UniformVector3* >(object);
  (void)_this;
}
void UniformVector3::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformVector3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformVector3& UniformVector3::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformVector3_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformVector3::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformVector3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformVector3::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformVector3::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformVector3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformVector3)
  return target;
}

size_t UniformVector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformVector3)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformVector3::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformVector3)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformVector3* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformVector3>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformVector3)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformVector3)
    MergeFrom(*source);
  }
}

void UniformVector3::MergeFrom(const UniformVector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformVector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void UniformVector3::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformVector3::CopyFrom(const UniformVector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformVector3::IsInitialized() const {
  return true;
}

void UniformVector3::InternalSwap(UniformVector3* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UniformVector3, z_)
      + sizeof(UniformVector3::z_)
      - PROTOBUF_FIELD_OFFSET(UniformVector3, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformVector3::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformVector4::InitAsDefaultInstance() {
}
class UniformVector4::_Internal {
 public:
};

UniformVector4::UniformVector4(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformVector4)
}
UniformVector4::UniformVector4(const UniformVector4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformVector4)
}

void UniformVector4::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
}

UniformVector4::~UniformVector4() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformVector4)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformVector4::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformVector4::ArenaDtor(void* object) {
  UniformVector4* _this = reinterpret_cast< UniformVector4* >(object);
  (void)_this;
}
void UniformVector4::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformVector4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformVector4& UniformVector4::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformVector4_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformVector4::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformVector4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformVector4::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float w = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformVector4::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformVector4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  // float w = 4;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformVector4)
  return target;
}

size_t UniformVector4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformVector4)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // float w = 4;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformVector4::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformVector4)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformVector4* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformVector4>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformVector4)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformVector4)
    MergeFrom(*source);
  }
}

void UniformVector4::MergeFrom(const UniformVector4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformVector4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from.w() <= 0 && from.w() >= 0)) {
    _internal_set_w(from._internal_w());
  }
}

void UniformVector4::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformVector4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformVector4::CopyFrom(const UniformVector4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformVector4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformVector4::IsInitialized() const {
  return true;
}

void UniformVector4::InternalSwap(UniformVector4* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UniformVector4, w_)
      + sizeof(UniformVector4::w_)
      - PROTOBUF_FIELD_OFFSET(UniformVector4, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformVector4::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformMatrix4::InitAsDefaultInstance() {
}
class UniformMatrix4::_Internal {
 public:
};

UniformMatrix4::UniformMatrix4(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformMatrix4)
}
UniformMatrix4::UniformMatrix4(const UniformMatrix4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&m11_, &from.m11_,
    static_cast<size_t>(reinterpret_cast<char*>(&m44_) -
    reinterpret_cast<char*>(&m11_)) + sizeof(m44_));
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformMatrix4)
}

void UniformMatrix4::SharedCtor() {
  ::memset(&m11_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m44_) -
      reinterpret_cast<char*>(&m11_)) + sizeof(m44_));
}

UniformMatrix4::~UniformMatrix4() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformMatrix4)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformMatrix4::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformMatrix4::ArenaDtor(void* object) {
  UniformMatrix4* _this = reinterpret_cast< UniformMatrix4* >(object);
  (void)_this;
}
void UniformMatrix4::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformMatrix4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformMatrix4& UniformMatrix4::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformMatrix4_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformMatrix4::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformMatrix4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&m11_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m44_) -
      reinterpret_cast<char*>(&m11_)) + sizeof(m44_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformMatrix4::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float m11 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          m11_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m12 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          m12_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m13 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          m13_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m14 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 117)) {
          m14_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m21 = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 173)) {
          m21_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m22 = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          m22_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m23 = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 189)) {
          m23_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m24 = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 197)) {
          m24_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m31 = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 253)) {
          m31_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m32 = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 5)) {
          m32_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m33 = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          m33_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m34 = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          m34_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m41 = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          m41_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m42 = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          m42_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m43 = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          m43_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float m44 = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          m44_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformMatrix4::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformMatrix4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float m11 = 11;
  if (!(this->m11() <= 0 && this->m11() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(11, this->_internal_m11(), target);
  }

  // float m12 = 12;
  if (!(this->m12() <= 0 && this->m12() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_m12(), target);
  }

  // float m13 = 13;
  if (!(this->m13() <= 0 && this->m13() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_m13(), target);
  }

  // float m14 = 14;
  if (!(this->m14() <= 0 && this->m14() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(14, this->_internal_m14(), target);
  }

  // float m21 = 21;
  if (!(this->m21() <= 0 && this->m21() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(21, this->_internal_m21(), target);
  }

  // float m22 = 22;
  if (!(this->m22() <= 0 && this->m22() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(22, this->_internal_m22(), target);
  }

  // float m23 = 23;
  if (!(this->m23() <= 0 && this->m23() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(23, this->_internal_m23(), target);
  }

  // float m24 = 24;
  if (!(this->m24() <= 0 && this->m24() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(24, this->_internal_m24(), target);
  }

  // float m31 = 31;
  if (!(this->m31() <= 0 && this->m31() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(31, this->_internal_m31(), target);
  }

  // float m32 = 32;
  if (!(this->m32() <= 0 && this->m32() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(32, this->_internal_m32(), target);
  }

  // float m33 = 33;
  if (!(this->m33() <= 0 && this->m33() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(33, this->_internal_m33(), target);
  }

  // float m34 = 34;
  if (!(this->m34() <= 0 && this->m34() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(34, this->_internal_m34(), target);
  }

  // float m41 = 41;
  if (!(this->m41() <= 0 && this->m41() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(41, this->_internal_m41(), target);
  }

  // float m42 = 42;
  if (!(this->m42() <= 0 && this->m42() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(42, this->_internal_m42(), target);
  }

  // float m43 = 43;
  if (!(this->m43() <= 0 && this->m43() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(43, this->_internal_m43(), target);
  }

  // float m44 = 44;
  if (!(this->m44() <= 0 && this->m44() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(44, this->_internal_m44(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformMatrix4)
  return target;
}

size_t UniformMatrix4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformMatrix4)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float m11 = 11;
  if (!(this->m11() <= 0 && this->m11() >= 0)) {
    total_size += 1 + 4;
  }

  // float m12 = 12;
  if (!(this->m12() <= 0 && this->m12() >= 0)) {
    total_size += 1 + 4;
  }

  // float m13 = 13;
  if (!(this->m13() <= 0 && this->m13() >= 0)) {
    total_size += 1 + 4;
  }

  // float m14 = 14;
  if (!(this->m14() <= 0 && this->m14() >= 0)) {
    total_size += 1 + 4;
  }

  // float m21 = 21;
  if (!(this->m21() <= 0 && this->m21() >= 0)) {
    total_size += 2 + 4;
  }

  // float m22 = 22;
  if (!(this->m22() <= 0 && this->m22() >= 0)) {
    total_size += 2 + 4;
  }

  // float m23 = 23;
  if (!(this->m23() <= 0 && this->m23() >= 0)) {
    total_size += 2 + 4;
  }

  // float m24 = 24;
  if (!(this->m24() <= 0 && this->m24() >= 0)) {
    total_size += 2 + 4;
  }

  // float m31 = 31;
  if (!(this->m31() <= 0 && this->m31() >= 0)) {
    total_size += 2 + 4;
  }

  // float m32 = 32;
  if (!(this->m32() <= 0 && this->m32() >= 0)) {
    total_size += 2 + 4;
  }

  // float m33 = 33;
  if (!(this->m33() <= 0 && this->m33() >= 0)) {
    total_size += 2 + 4;
  }

  // float m34 = 34;
  if (!(this->m34() <= 0 && this->m34() >= 0)) {
    total_size += 2 + 4;
  }

  // float m41 = 41;
  if (!(this->m41() <= 0 && this->m41() >= 0)) {
    total_size += 2 + 4;
  }

  // float m42 = 42;
  if (!(this->m42() <= 0 && this->m42() >= 0)) {
    total_size += 2 + 4;
  }

  // float m43 = 43;
  if (!(this->m43() <= 0 && this->m43() >= 0)) {
    total_size += 2 + 4;
  }

  // float m44 = 44;
  if (!(this->m44() <= 0 && this->m44() >= 0)) {
    total_size += 2 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformMatrix4::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformMatrix4)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformMatrix4* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformMatrix4>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformMatrix4)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformMatrix4)
    MergeFrom(*source);
  }
}

void UniformMatrix4::MergeFrom(const UniformMatrix4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformMatrix4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.m11() <= 0 && from.m11() >= 0)) {
    _internal_set_m11(from._internal_m11());
  }
  if (!(from.m12() <= 0 && from.m12() >= 0)) {
    _internal_set_m12(from._internal_m12());
  }
  if (!(from.m13() <= 0 && from.m13() >= 0)) {
    _internal_set_m13(from._internal_m13());
  }
  if (!(from.m14() <= 0 && from.m14() >= 0)) {
    _internal_set_m14(from._internal_m14());
  }
  if (!(from.m21() <= 0 && from.m21() >= 0)) {
    _internal_set_m21(from._internal_m21());
  }
  if (!(from.m22() <= 0 && from.m22() >= 0)) {
    _internal_set_m22(from._internal_m22());
  }
  if (!(from.m23() <= 0 && from.m23() >= 0)) {
    _internal_set_m23(from._internal_m23());
  }
  if (!(from.m24() <= 0 && from.m24() >= 0)) {
    _internal_set_m24(from._internal_m24());
  }
  if (!(from.m31() <= 0 && from.m31() >= 0)) {
    _internal_set_m31(from._internal_m31());
  }
  if (!(from.m32() <= 0 && from.m32() >= 0)) {
    _internal_set_m32(from._internal_m32());
  }
  if (!(from.m33() <= 0 && from.m33() >= 0)) {
    _internal_set_m33(from._internal_m33());
  }
  if (!(from.m34() <= 0 && from.m34() >= 0)) {
    _internal_set_m34(from._internal_m34());
  }
  if (!(from.m41() <= 0 && from.m41() >= 0)) {
    _internal_set_m41(from._internal_m41());
  }
  if (!(from.m42() <= 0 && from.m42() >= 0)) {
    _internal_set_m42(from._internal_m42());
  }
  if (!(from.m43() <= 0 && from.m43() >= 0)) {
    _internal_set_m43(from._internal_m43());
  }
  if (!(from.m44() <= 0 && from.m44() >= 0)) {
    _internal_set_m44(from._internal_m44());
  }
}

void UniformMatrix4::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformMatrix4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformMatrix4::CopyFrom(const UniformMatrix4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformMatrix4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformMatrix4::IsInitialized() const {
  return true;
}

void UniformMatrix4::InternalSwap(UniformMatrix4* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UniformMatrix4, m44_)
      + sizeof(UniformMatrix4::m44_)
      - PROTOBUF_FIELD_OFFSET(UniformMatrix4, m11_)>(
          reinterpret_cast<char*>(&m11_),
          reinterpret_cast<char*>(&other->m11_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformMatrix4::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformInts::InitAsDefaultInstance() {
}
class UniformInts::_Internal {
 public:
};

UniformInts::UniformInts(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformInts)
}
UniformInts::UniformInts(const UniformInts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformInts)
}

void UniformInts::SharedCtor() {
}

UniformInts::~UniformInts() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformInts)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformInts::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformInts::ArenaDtor(void* object) {
  UniformInts* _this = reinterpret_cast< UniformInts* >(object);
  (void)_this;
}
void UniformInts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformInts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformInts& UniformInts::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformInts_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformInts::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformInts)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformInts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformInts::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformInts)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 values = 1;
  {
    int byte_size = _values_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_values(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformInts)
  return target;
}

size_t UniformInts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformInts)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 values = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _values_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformInts::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformInts)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformInts* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformInts>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformInts)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformInts)
    MergeFrom(*source);
  }
}

void UniformInts::MergeFrom(const UniformInts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformInts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void UniformInts::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformInts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformInts::CopyFrom(const UniformInts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformInts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformInts::IsInitialized() const {
  return true;
}

void UniformInts::InternalSwap(UniformInts* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformInts::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformBools::InitAsDefaultInstance() {
}
class UniformBools::_Internal {
 public:
};

UniformBools::UniformBools(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformBools)
}
UniformBools::UniformBools(const UniformBools& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformBools)
}

void UniformBools::SharedCtor() {
}

UniformBools::~UniformBools() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformBools)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformBools::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformBools::ArenaDtor(void* object) {
  UniformBools* _this = reinterpret_cast< UniformBools* >(object);
  (void)_this;
}
void UniformBools::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformBools::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformBools& UniformBools::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformBools_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformBools::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformBools)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformBools::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bool values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformBools::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformBools)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformBools)
  return target;
}

size_t UniformBools::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformBools)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_values_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _values_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformBools::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformBools)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformBools* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformBools>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformBools)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformBools)
    MergeFrom(*source);
  }
}

void UniformBools::MergeFrom(const UniformBools& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformBools)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void UniformBools::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformBools)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformBools::CopyFrom(const UniformBools& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformBools)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformBools::IsInitialized() const {
  return true;
}

void UniformBools::InternalSwap(UniformBools* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformBools::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformFloats::InitAsDefaultInstance() {
}
class UniformFloats::_Internal {
 public:
};

UniformFloats::UniformFloats(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformFloats)
}
UniformFloats::UniformFloats(const UniformFloats& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformFloats)
}

void UniformFloats::SharedCtor() {
}

UniformFloats::~UniformFloats() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformFloats)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformFloats::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformFloats::ArenaDtor(void* object) {
  UniformFloats* _this = reinterpret_cast< UniformFloats* >(object);
  (void)_this;
}
void UniformFloats::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformFloats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformFloats& UniformFloats::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformFloats_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformFloats::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformFloats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformFloats::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated float values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13) {
          _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformFloats::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformFloats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformFloats)
  return target;
}

size_t UniformFloats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformFloats)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_values_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _values_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformFloats::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformFloats)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformFloats* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformFloats>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformFloats)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformFloats)
    MergeFrom(*source);
  }
}

void UniformFloats::MergeFrom(const UniformFloats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformFloats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void UniformFloats::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformFloats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformFloats::CopyFrom(const UniformFloats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformFloats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformFloats::IsInitialized() const {
  return true;
}

void UniformFloats::InternalSwap(UniformFloats* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformFloats::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformVector2s::InitAsDefaultInstance() {
}
class UniformVector2s::_Internal {
 public:
};

UniformVector2s::UniformVector2s(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformVector2s)
}
UniformVector2s::UniformVector2s(const UniformVector2s& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformVector2s)
}

void UniformVector2s::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UniformVector2s_Math_2eproto.base);
}

UniformVector2s::~UniformVector2s() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformVector2s)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformVector2s::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformVector2s::ArenaDtor(void* object) {
  UniformVector2s* _this = reinterpret_cast< UniformVector2s* >(object);
  (void)_this;
}
void UniformVector2s::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformVector2s::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformVector2s& UniformVector2s::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformVector2s_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformVector2s::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformVector2s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformVector2s::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .frame.proto.UniformVector2 values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformVector2s::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformVector2s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .frame.proto.UniformVector2 values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformVector2s)
  return target;
}

size_t UniformVector2s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformVector2s)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .frame.proto.UniformVector2 values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformVector2s::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformVector2s)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformVector2s* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformVector2s>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformVector2s)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformVector2s)
    MergeFrom(*source);
  }
}

void UniformVector2s::MergeFrom(const UniformVector2s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformVector2s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void UniformVector2s::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformVector2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformVector2s::CopyFrom(const UniformVector2s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformVector2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformVector2s::IsInitialized() const {
  return true;
}

void UniformVector2s::InternalSwap(UniformVector2s* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformVector2s::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformVector3s::InitAsDefaultInstance() {
}
class UniformVector3s::_Internal {
 public:
};

UniformVector3s::UniformVector3s(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformVector3s)
}
UniformVector3s::UniformVector3s(const UniformVector3s& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformVector3s)
}

void UniformVector3s::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UniformVector3s_Math_2eproto.base);
}

UniformVector3s::~UniformVector3s() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformVector3s)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformVector3s::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformVector3s::ArenaDtor(void* object) {
  UniformVector3s* _this = reinterpret_cast< UniformVector3s* >(object);
  (void)_this;
}
void UniformVector3s::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformVector3s::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformVector3s& UniformVector3s::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformVector3s_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformVector3s::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformVector3s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformVector3s::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .frame.proto.UniformVector3 values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformVector3s::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformVector3s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .frame.proto.UniformVector3 values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformVector3s)
  return target;
}

size_t UniformVector3s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformVector3s)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .frame.proto.UniformVector3 values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformVector3s::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformVector3s)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformVector3s* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformVector3s>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformVector3s)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformVector3s)
    MergeFrom(*source);
  }
}

void UniformVector3s::MergeFrom(const UniformVector3s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformVector3s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void UniformVector3s::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformVector3s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformVector3s::CopyFrom(const UniformVector3s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformVector3s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformVector3s::IsInitialized() const {
  return true;
}

void UniformVector3s::InternalSwap(UniformVector3s* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformVector3s::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformVector4s::InitAsDefaultInstance() {
}
class UniformVector4s::_Internal {
 public:
};

UniformVector4s::UniformVector4s(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformVector4s)
}
UniformVector4s::UniformVector4s(const UniformVector4s& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformVector4s)
}

void UniformVector4s::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UniformVector4s_Math_2eproto.base);
}

UniformVector4s::~UniformVector4s() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformVector4s)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformVector4s::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformVector4s::ArenaDtor(void* object) {
  UniformVector4s* _this = reinterpret_cast< UniformVector4s* >(object);
  (void)_this;
}
void UniformVector4s::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformVector4s::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformVector4s& UniformVector4s::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformVector4s_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformVector4s::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformVector4s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformVector4s::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .frame.proto.UniformVector4 values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformVector4s::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformVector4s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .frame.proto.UniformVector4 values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformVector4s)
  return target;
}

size_t UniformVector4s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformVector4s)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .frame.proto.UniformVector4 values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformVector4s::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformVector4s)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformVector4s* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformVector4s>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformVector4s)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformVector4s)
    MergeFrom(*source);
  }
}

void UniformVector4s::MergeFrom(const UniformVector4s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformVector4s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void UniformVector4s::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformVector4s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformVector4s::CopyFrom(const UniformVector4s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformVector4s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformVector4s::IsInitialized() const {
  return true;
}

void UniformVector4s::InternalSwap(UniformVector4s* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformVector4s::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UniformMatrix4s::InitAsDefaultInstance() {
}
class UniformMatrix4s::_Internal {
 public:
};

UniformMatrix4s::UniformMatrix4s(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:frame.proto.UniformMatrix4s)
}
UniformMatrix4s::UniformMatrix4s(const UniformMatrix4s& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:frame.proto.UniformMatrix4s)
}

void UniformMatrix4s::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UniformMatrix4s_Math_2eproto.base);
}

UniformMatrix4s::~UniformMatrix4s() {
  // @@protoc_insertion_point(destructor:frame.proto.UniformMatrix4s)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UniformMatrix4s::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UniformMatrix4s::ArenaDtor(void* object) {
  UniformMatrix4s* _this = reinterpret_cast< UniformMatrix4s* >(object);
  (void)_this;
}
void UniformMatrix4s::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UniformMatrix4s::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UniformMatrix4s& UniformMatrix4s::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UniformMatrix4s_Math_2eproto.base);
  return *internal_default_instance();
}


void UniformMatrix4s::Clear() {
// @@protoc_insertion_point(message_clear_start:frame.proto.UniformMatrix4s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UniformMatrix4s::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .frame.proto.UniformMatrix4 values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UniformMatrix4s::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:frame.proto.UniformMatrix4s)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .frame.proto.UniformMatrix4 values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:frame.proto.UniformMatrix4s)
  return target;
}

size_t UniformMatrix4s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:frame.proto.UniformMatrix4s)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .frame.proto.UniformMatrix4 values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniformMatrix4s::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:frame.proto.UniformMatrix4s)
  GOOGLE_DCHECK_NE(&from, this);
  const UniformMatrix4s* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UniformMatrix4s>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:frame.proto.UniformMatrix4s)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:frame.proto.UniformMatrix4s)
    MergeFrom(*source);
  }
}

void UniformMatrix4s::MergeFrom(const UniformMatrix4s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:frame.proto.UniformMatrix4s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void UniformMatrix4s::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:frame.proto.UniformMatrix4s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniformMatrix4s::CopyFrom(const UniformMatrix4s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:frame.proto.UniformMatrix4s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniformMatrix4s::IsInitialized() const {
  return true;
}

void UniformMatrix4s::InternalSwap(UniformMatrix4s* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UniformMatrix4s::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace frame
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::frame::proto::UniformVector2* Arena::CreateMaybeMessage< ::frame::proto::UniformVector2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformVector2 >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformVector3* Arena::CreateMaybeMessage< ::frame::proto::UniformVector3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformVector3 >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformVector4* Arena::CreateMaybeMessage< ::frame::proto::UniformVector4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformVector4 >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformMatrix4* Arena::CreateMaybeMessage< ::frame::proto::UniformMatrix4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformMatrix4 >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformInts* Arena::CreateMaybeMessage< ::frame::proto::UniformInts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformInts >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformBools* Arena::CreateMaybeMessage< ::frame::proto::UniformBools >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformBools >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformFloats* Arena::CreateMaybeMessage< ::frame::proto::UniformFloats >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformFloats >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformVector2s* Arena::CreateMaybeMessage< ::frame::proto::UniformVector2s >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformVector2s >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformVector3s* Arena::CreateMaybeMessage< ::frame::proto::UniformVector3s >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformVector3s >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformVector4s* Arena::CreateMaybeMessage< ::frame::proto::UniformVector4s >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformVector4s >(arena);
}
template<> PROTOBUF_NOINLINE ::frame::proto::UniformMatrix4s* Arena::CreateMaybeMessage< ::frame::proto::UniformMatrix4s >(Arena* arena) {
  return Arena::CreateMessageInternal< ::frame::proto::UniformMatrix4s >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
